C++实现的电梯模拟运行
不需要加入测试模块


要求多用数据结构，如哈希表，队列，树等结构实现，
UI界面考虑用Qt实现(比如登录，登录后的其余三个
电梯区间的选择设置，电梯运行时间选择设置，和之后
人们进出电梯和电梯状态设置，和电梯运行显示等等)


功能主要包括：

1 多电梯协同，比如说像医院住院部那样，四个电梯，一个
从顶楼到 1 楼，另外三个分别有一定的工作区间，工作区间
在登录界面登录完成后一次从左到右进行设置，电梯上下楼
需要时间，开关门时间自定义，默认为0.5s，而上下楼时间
可以在电梯区间选择进行完后选择,可以选择默认1s,或者选
择输入楼层高度和电梯运行速度进行设置。

2 乘客流量模拟 上下班高峰期统计一下，电梯停靠在哪几楼
，哪几楼有上班族，或者老年人居多的话可以适当的把多的
电梯运行空间集中在低楼层或者是有老人的楼层

3 故障模拟 可以有一个小概率事件（验收可以调整），门打
不开了，摁下报警按钮，输入不存在的楼层比如 - 1 就到 1
 楼，输入 888 楼就到最高层，输入 abc. 就原地不动

4 消防模式或者紧急疏散模式，比如着火不能使用，紧急疏散模
式更快运行等等

5 加入少量噪声，随机在各楼层上人或者下人，如果到你的时候
人满了你就得等着，加入报警按钮进行报错，开关门按钮可以在当前楼层多滞留一会

6 可视化处理 登陆界面进去以后能看到并排的电梯图，能看到当前
哪个电梯在几层，有几人，超载了颜色变红，故障了变黄，上下
楼时能看到一个电梯照片在上下移动

elevator-system/
├── app/
│   ├── src/
│   │   ├── core/           # 核心业务逻辑
│   │   ├── ui/            # UI相关代码
│   │   └── utils/         # 工具类
│   └── include/           # 头文件
├── resources/             # 资源文件
│   ├── images/           # 图片资源
│   └── styles/           # QSS样式表
└── CMakeLists.txt        # 主CMake配置文件


C++实现的电梯模拟运行
不需要加入测试模块


要求多用数据结构，如哈希表，队列，树等结构实现，
UI界面考虑用Qt实现(比如登录，登录后的其余三个
电梯区间的选择设置，电梯运行时间选择设置，和之后
人们进出电梯和电梯状态设置，和电梯运行显示等等)


功能主要包括：

1 多电梯协同，比如说像医院住院部那样，四个电梯，一个
从顶楼到 1 楼，另外三个分别有一定的工作区间，工作区间
在登录界面登录完成后一次从左到右进行设置，电梯上下楼
需要时间，开关门时间自定义，默认为0.5s，而上下楼时间
可以在电梯区间选择进行完后选择,可以选择默认1s,或者选
择输入楼层高度和电梯运行速度进行设置。

2 乘客流量模拟 上下班高峰期统计一下，电梯停靠在哪几楼
，哪几楼有上班族，或者老年人居多的话可以适当的把多的
电梯运行空间集中在低楼层或者是有老人的楼层

3 故障模拟 可以有一个小概率事件（验收可以调整），门打
不开了，摁下报警按钮，输入不存在的楼层比如 - 1 就到 1
 楼，输入 888 楼就到最高层，输入 abc. 就原地不动

4 消防模式或者紧急疏散模式，比如着火不能使用，紧急疏散模
式更快运行等等

5 加入少量噪声，随机在各楼层上人或者下人，如果到你的时候
人满了你就得等着，加入报警按钮进行报错，开关门按钮可以在当前楼层多滞留一会

6 可视化处理 登陆界面进去以后能看到并排的电梯图，能看到当前
哪个电梯在几层，有几人，超载了颜色变红，故障了变黄，上下
楼时能看到一个电梯照片在上下移动

elevator-system/
├── app/
│   ├── src/
│   │   ├── core/           # 核心业务逻辑
│   │   ├── ui/            # UI相关代码
│   │   └── utils/         # 工具类
│   └── include/           # 头文件
├── resources/             # 资源文件
│   ├── images/           # 图片资源
│   └── styles/           # QSS样式表
└── CMakeLists.txt        # 主CMake配置文件 给出上述要求的模块化，可扩展的能依次实现的步骤

我将帮您规划这个电梯系统的实现步骤。我会按照模块化的方式组织代码，并给出关键文件的实现建议。
1. 首先创建基础项目结构
2. 核心模块设计
首先创建电梯核心类：
3. UI模块设计
4. 实现步骤
基础框架搭建:
实现登录界面
创建主窗口框架
设置基本的Qt资源文件
2. 核心功能实现:
电梯调度算法
乘客管理系统
故障模拟系统
UI功能实现:
电梯可视化组件
设置界面
状态显示
高级功能实现:
高峰期优化
紧急模式
故障处理
5. 数据结构使用说明
哈希表:
用于存储楼层统计信息
记录各电梯的配置信息
队列:
电梯目标楼层队列
等待乘客队列
优先队列:
紧急请求处理
高峰期请求优化
树结构:
可以用于电梯调度决策
优化路径选择